// This file is auto-generated by packages/types/scripts/generate-client.cjs.
// Do not edit this file directly.

import type { AxiosInstance, AxiosRequestConfig } from '../http/axios';
import { createAxiosInstance } from '../http/axios';

export type ErrorResponse = {
  error: string;
};
export type HealthResponse = {
  ok: true;
  ts: string;
};
export type RecordCreateInput = {
  title: string;
  content?: string;
};
export type RecordDeleteResponse = {
  ok: true;
};
export type RecordDto = {
  id: string;
  title: string;
  content: string | null;
  createdAt: string;
  updatedAt: string;
};
export type RecordDtoList = RecordDto[];
export type RecordUpdateInput = {
  title?: string;
  content?: string | null;
};

export type RecordItem = RecordDto;


export interface MnemosApiClientOptions extends AxiosRequestConfig {
  baseURL?: string;
}

export class MnemosApiClient {
  private readonly http: AxiosInstance;

  constructor(http: AxiosInstance) {
    this.http = http;
  }

  static create(options: MnemosApiClientOptions = {}) {
    return new MnemosApiClient(createAxiosInstance({ withCredentials: true, ...options }));
  }

  /** Health check. */
  async getHealth(): Promise<HealthResponse> {
    const response = await this.http.get<HealthResponse>(`/api/health`);
    return response.data;
  }

  /** List all records. */
  async listRecords(): Promise<RecordDtoList> {
    const response = await this.http.get<RecordDtoList>(`/api/records`);
    return response.data;
  }

  /** Create a new record. */
  async createRecord(body: RecordCreateInput): Promise<RecordDto> {
    const response = await this.http.post<RecordDto>(`/api/records`, body);
    return response.data;
  }

  /** Update an existing record. */
  async updateRecord(id: string, body: RecordUpdateInput): Promise<RecordDto> {
    const response = await this.http.put<RecordDto>(`/api/records/${encodeURIComponent(id)}`, body);
    return response.data;
  }

  /** Delete a record. */
  async deleteRecord(id: string): Promise<RecordDeleteResponse> {
    const response = await this.http.delete<RecordDeleteResponse>(`/api/records/${encodeURIComponent(id)}`);
    return response.data;
  }
}

export function createMnemosApiClient(options: MnemosApiClientOptions = {}) {
  return MnemosApiClient.create(options);
}
