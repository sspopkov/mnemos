/**
 * This file is auto-generated by the API service. Do not edit manually.
 */
export const openapi = {
  openapi: '3.1.0',
  info: {
    title: 'Mnemos API',
    description: 'HTTP API for the Mnemos application.',
    version: '0.0.1',
  },
  servers: [
    {
      url: 'http://localhost:4000',
    },
  ],
  paths: {
    '/api/health': {
      get: {
        tags: ['health'],
        responses: {
          '200': {
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/HealthResponse',
                },
              },
            },
          },
        },
      },
    },
    '/api/records': {
      get: {
        tags: ['records'],
        responses: {
          '200': {
            content: {
              'application/json': {
                schema: {
                  type: 'array',
                  items: {
                    $ref: '#/components/schemas/Record',
                  },
                },
              },
            },
          },
        },
      },
      post: {
        tags: ['records'],
        requestBody: {
          required: true,
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CreateRecordBody',
              },
            },
          },
        },
        responses: {
          '201': {
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/Record',
                },
              },
            },
          },
          '400': {
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/ErrorResponse',
                },
              },
            },
          },
        },
      },
    },
    '/api/records/{id}': {
      put: {
        tags: ['records'],
        parameters: [
          {
            name: 'id',
            in: 'path',
            required: true,
            schema: {
              type: 'string',
            },
          },
        ],
        requestBody: {
          required: true,
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/UpdateRecordBody',
              },
            },
          },
        },
        responses: {
          '200': {
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/Record',
                },
              },
            },
          },
        },
      },
      delete: {
        tags: ['records'],
        parameters: [
          {
            name: 'id',
            in: 'path',
            required: true,
            schema: {
              type: 'string',
            },
          },
        ],
        responses: {
          '200': {
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/DeleteRecordResponse',
                },
              },
            },
          },
        },
      },
    },
  },
  components: {
    schemas: {
      HealthResponse: {
        type: 'object',
        additionalProperties: false,
        properties: {
          ok: {
            const: true,
            type: 'boolean',
          },
          ts: {
            type: 'string',
            format: 'date-time',
          },
        },
        required: ['ok', 'ts'],
      },
      Record: {
        type: 'object',
        additionalProperties: false,
        properties: {
          id: {
            type: 'string',
          },
          title: {
            type: 'string',
          },
          content: {
            anyOf: [
              {
                type: 'string',
              },
              {
                type: 'null',
              },
            ],
          },
          createdAt: {
            type: 'string',
            format: 'date-time',
          },
          updatedAt: {
            type: 'string',
            format: 'date-time',
          },
        },
        required: ['id', 'title', 'content', 'createdAt', 'updatedAt'],
      },
      CreateRecordBody: {
        type: 'object',
        additionalProperties: false,
        properties: {
          title: {
            type: 'string',
            minLength: 1,
          },
          content: {
            type: 'string',
          },
        },
        required: ['title'],
      },
      UpdateRecordBody: {
        type: 'object',
        additionalProperties: false,
        properties: {
          title: {
            type: 'string',
            minLength: 1,
          },
          content: {
            anyOf: [
              {
                type: 'string',
              },
              {
                type: 'null',
              },
            ],
          },
        },
      },
      DeleteRecordResponse: {
        type: 'object',
        additionalProperties: false,
        properties: {
          ok: {
            type: 'boolean',
          },
        },
        required: ['ok'],
      },
      ErrorResponse: {
        type: 'object',
        additionalProperties: false,
        properties: {
          error: {
            type: 'string',
          },
        },
        required: ['error'],
      },
    },
  },
} as const;

export type OpenAPIDocument = typeof openapi;
export type Paths = OpenAPIDocument['paths'];
export type Components = NonNullable<OpenAPIDocument['components']>;
