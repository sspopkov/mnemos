name: Build & Deploy (Windows Server)

on:
  push:
    branches: [ "master" ]  # автодеплой при пуше в master

jobs:
  build-deploy:
    runs-on: [self-hosted, Windows]
    env:
      TARGET_WEB: C:\www\mnemos
      TARGET_API: C:\srv\mnemos-api
      API_SERVICE: mnemos-api
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.19.0"

      - name: Install PNPM
        run: npm i -g pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build all apps
        run: pnpm build

      # --- FRONTEND ---
      - name: Deploy frontend to nginx www
        shell: cmd
        run: |
          if not exist "%TARGET_WEB%" mkdir "%TARGET_WEB%"
          robocopy apps\web\dist "%TARGET_WEB%" /MIR
          if %ERRORLEVEL% LEQ 7 exit /B 0
          exit /B %ERRORLEVEL%

      # --- BACKEND ---

      # 1) Деплой API через pnpm deploy (собирает правильные node_modules)
      - name: Deploy API (pnpm deploy)
        run: pnpm -w deploy --filter ./apps/api --prod "C:\srv\mnemos-api"

      # (если нужен .env из репо — докинем отдельно)
      - name: Copy .env if exists
        shell: cmd
        run: |
          @echo off
          if exist apps\api\.env copy /Y apps\api\.env "C:\srv\mnemos-api\"

      # 2) Перезапуск через PM2
      - name: Reload API with PM2
        shell: cmd
        env:
          PM2_HOME: C:\ProgramData\pm2
        run: |
          @echo off
          for /f "delims=" %%i in ('npm prefix -g') do set "NPM_PREFIX=%%i"
          set "PM2=%NPM_PREFIX%\pm2.cmd"
          if not exist "%PM2%" ( echo [ERROR] pm2 CLI not found & exit /b 1 )
          
          "%PM2%" describe mnemos-api >nul 2>&1 || "%PM2%" start "C:\srv\mnemos-api\dist\main.js" --name mnemos-api --cwd "C:\srv\mnemos-api" --update-env --time
          "%PM2%" reload mnemos-api
          "%PM2%" save